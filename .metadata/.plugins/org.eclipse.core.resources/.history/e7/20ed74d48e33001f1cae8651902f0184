package com.hadoop1.sql;

import java.io.IOException;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class HospitalWithMySQLMapper extends Mapper<LongWritable, Text, HospitalEntityRecorder, NullWritable> {
	
	NullWritable n = NullWritable.get();

	public void map(LongWritable ikey, Text ivalue, Context context) throws IOException, InterruptedException {
		
		HospitalEntityRecorder recoder = new HospitalEntityRecorder();
// 암호화요양기호,요양기관명,종별코드,종별코드명,시도코드,시도코드명,시군구코드,시군구코드명,읍면동,우편번호,주소,전화번호,병원홈페이지,개설일자,총의사수,의과일반의 인원수,의과인턴 인원수,의과레지던트 인원수,의과전문의 인원수,치과일반의 인원수,치과인턴 인원수,치과레지던트 인원수,치과전문의 인원수,한방일반의 인원수,한방인턴 인원수,한방레지던트 인원수,한방전문의 인원수,조산사 인원수,좌표(X),좌표(Y)		
		String[] strs = ivalue.toString().split(",");
		String hospital_id = strs[0];
		String mon_start_time = strs[22];
		String mon_end_time = strs[23];
	    String tue_start_time = strs[24]; 
	    String tue_end_time = strs[25];
	    String wed_start_time = strs[26];
	    String wed_end_time = strs[27];
		String thu_start_time = strs[28];
	    String thu_end_time = strs[29]; 
	    String fri_start_time = strs[30];
	    String fri_end_time = strs[31];
	    String sat_start_time = strs[32];
		String sat_end_time = strs[33];
	    String sun_start_time = strs[20]; 
	    String sun_end_time = strs[21];
	    String sun_holiday = strs[8];
	    String lunchtime = strs[16];
	    String holiday = strs[9];
	    
	    recoder.setHospital_id(hospital_id);
		recoder.mon_start_time(mon_start_time);
		recoder.mon_end_time(mon_end_time);
		recoder.tue_start_time(tue_start_time);
		recoder.tue_end_time(tue_end_time);
		recoder.wed_start_time(wed_start_time);
		recoder.wed_end_time(wed_end_time);
		recoder.thu_start_time(thu_start_time);
		recoder.thu_end_time(thu_end_time);
		recoder.fri_start_time(fri_start_time);
		recoder.fri_end_time(fri_end_time);
		recoder.sat_start_time(sat_start_time);
		recoder.sat_end_time(sat_end_time);
		recoder.sun_start_time(sun_start_time);
		recoder.sun_end_time(sun_end_time);
		recoder.sun_holiday(sun_holiday);
		recoder.lunchtime(lunchtime);
		recoder.holiday(holiday);
		
	}
}
